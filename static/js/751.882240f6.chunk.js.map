{"version":3,"file":"static/js/751.882240f6.chunk.js","mappings":"oQAGaA,EAAUC,EAAAA,EAAAA,QAAH,qQAcPC,EAAOD,EAAAA,EAAAA,GAAH,+bAmBJE,EAASF,EAAAA,EAAAA,IAAH,sJAQNG,GAAaH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,+OAYVK,EAAOL,EAAAA,EAAAA,GAAH,kNAgBJM,GAJON,EAAAA,EAAAA,KAAH,oDAIIA,EAAAA,EAAAA,GAAH,mH,SC9DLO,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,SAChD,OACE,UAACV,EAAD,YACE,SAACO,EAAD,8BACA,SAACL,EAAD,UACGO,EAAeE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,YAAvB,OAClB,SAACR,EAAD,WACE,UAACF,EAAD,CAAqBW,GAAE,iBAAYH,GAAMI,MAAO,CAAEC,KAAMP,GAAxD,WACE,kBAAMQ,MAAO,CAAEC,QAAS,QAAxB,cAAoCN,MAEpC,SAACV,EAAD,CACEiB,IAAKP,EACLQ,IAAG,0CAAqCP,OAL3BF,IADRA,EADO,QAe3B,ECTD,EAfa,WACX,OAA4CU,EAAAA,EAAAA,UAAS,IAArD,eAAOb,EAAP,KAAuBc,EAAvB,KACMb,GAAWc,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAkBC,KAAKJ,EACxB,GAAE,KAGD,+BACE,SAACf,EAAD,CAAiBC,eAAgBA,EAAgBC,SAAUA,KAGhE,C,8LCjBYgB,EAAe,mCAAG,sGACNE,EAAAA,GAAAA,IACrB,6FAF2B,uBACrBC,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,SAJiB,2CAAH,qDAOfC,EAAkB,mCAAG,WAAMC,GAAN,yFACTJ,EAAAA,GAAAA,IAAA,kHACsFI,EADtF,gCADS,uBACxBH,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,sDAOlBI,EAAa,mCAAG,WAAMrB,GAAN,yFACJgB,EAAAA,GAAAA,IAAA,6CACiBhB,EADjB,4EADI,uBACnBiB,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAObK,EAAa,mCAAG,WAAMtB,GAAN,yFACJgB,EAAAA,GAAAA,IAAA,6CACiBhB,EADjB,6DADI,uBACnBiB,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAObM,EAAU,mCAAG,WAAMvB,GAAN,yFACDgB,EAAAA,GAAAA,IAAA,6CACiBhB,EADjB,qEADC,uBAChBiB,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,qD","sources":["components/TrendingsMovies/TrendingsMovies.styled.js","components/TrendingsMovies/TrendingsMovies.jsx","Pages/Home.jsx","components/Api/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  margin: 0 auto;\n  padding: 15px;\n  @media screen and (min-width: 320px) {\n    width: 320px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1200px;\n  }\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  padding: 0;\n  margin: 15px;\n  gap: 15px;\n  list-style: none;\n  margin: 15px auto;\n  @media screen and (min-width: 320px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media screen and (min-width: 1280px) {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n\nexport const Poster = styled.img`\n  width: calc(100%);\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const LinkStyled = styled(Link)`\n  display: flex;\n  flex-direction: column-reverse;\n  text-decoration: none;\n  font-weight: 700;\n  text-transform: uppercase;\n  background-color: black;\n  color: white;\n  border-radius: 4px;\n  height: 100%;\n`;\n\nexport const Item = styled.li`\n  box-shadow: 0px 0px 4px black;\n  text-align: center;\n  border-radius: 4px;\n  transition: 250ms;\n  &:hover,\n  &:focus {\n    scale: 1.01;\n    box-shadow: 0px 0px 8px black;\n  }\n`;\n\nexport const Text = styled.span`\n  background-color: black;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  color: white;\n  text-transform: uppercase;\n  font-size: 26px;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  Section,\n  List,\n  Poster,\n  Item,\n  LinkStyled,\n  Title,\n} from './TrendingsMovies.styled';\nexport const TrendingsMovies = ({ trendingMovies, location }) => {\n  return (\n    <Section>\n      <Title>Trending Today</Title>\n      <List>\n        {trendingMovies.map(({ id, original_title, poster_path }) => (\n          <Item key={id}>\n            <LinkStyled key={id} to={`movies/${id}`} state={{ from: location }}>\n              <span style={{ padding: '10px' }}> {original_title}</span>\n\n              <Poster\n                alt={original_title}\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              ></Poster>\n            </LinkStyled>\n          </Item>\n        ))}\n      </List>\n    </Section>\n  );\n};\n\nTrendingsMovies.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n  location: PropTypes.object.isRequired,\n};\n","// import { Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getTrandingsApi } from 'components/Api/Api';\nimport { useLocation } from 'react-router-dom';\nimport { TrendingsMovies } from 'components/TrendingsMovies/TrendingsMovies';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrandingsApi().then(setTrendingMovies);\n  }, []);\n\n  return (\n    <>\n      <TrendingsMovies trendingMovies={trendingMovies} location={location} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nexport const getTrandingsApi = async () => {\n  const { data } = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/week?api_key=6f552eb6929f0128999ddb3bd491ac60'\n  );\n  return data.results;\n};\n\nexport const getSearchMoviesApi = async name => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=6f552eb6929f0128999ddb3bd491ac60&language=en-US&query=${name}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const getReviewsApi = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=6f552eb6929f0128999ddb3bd491ac60&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getDetailsApi = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=6f552eb6929f0128999ddb3bd491ac60&language=en-US`\n  );\n  return data;\n};\n\nexport const getCastApi = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=6f552eb6929f0128999ddb3bd491ac60&language=en-US`\n  );\n  return data;\n};\n"],"names":["Section","styled","List","Poster","LinkStyled","Link","Item","Title","TrendingsMovies","trendingMovies","location","map","id","original_title","poster_path","to","state","from","style","padding","alt","src","useState","setTrendingMovies","useLocation","useEffect","getTrandingsApi","then","axios","data","results","getSearchMoviesApi","name","getReviewsApi","getDetailsApi","getCastApi"],"sourceRoot":""}