{"version":3,"file":"static/js/20.aae1b225.chunk.js","mappings":"4QAEaA,EAAOC,EAAAA,EAAAA,GAAH,uOAaJC,EAASD,EAAAA,EAAAA,EAAH,oEAKNE,EAASF,EAAAA,EAAAA,EAAH,2F,SCjBNG,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,UAACL,EAAD,WACsB,IAAnBK,EAAQC,SAAgB,oEACxBD,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,UAACR,EAAD,uBACU,4BAASO,QAEnB,SAACN,EAAD,UAASO,MAJFF,EADE,MAUlB,ECSD,EArBgB,WACd,IAAQG,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KAEMC,EAAY,mCAAG,qGACOC,EAAAA,EAAAA,IAAcL,GADrB,OACbM,EADa,OAEnBH,EAAWG,EAAYC,SAFJ,2CAAH,qDAUlB,OALAC,EAAAA,EAAAA,YAAU,WACRJ,GAED,GAAE,KAGD,+BACE,SAACX,EAAD,CAAaC,QAASA,KAG3B,C,8LCtBYe,EAAe,mCAAG,sGACNC,EAAAA,GAAAA,IACrB,6FAF2B,uBACrBC,EADqB,EACrBA,KADqB,kBAItBA,EAAKJ,SAJiB,2CAAH,qDAOfK,EAAkB,mCAAG,WAAMC,GAAN,yFACTH,EAAAA,GAAAA,IAAA,kHACsFG,EADtF,gCADS,uBACxBF,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,sDAOlBN,EAAa,mCAAG,WAAMR,GAAN,yFACJa,EAAAA,GAAAA,IAAA,6CACiBb,EADjB,4EADI,uBACnBc,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAObG,EAAa,mCAAG,WAAMjB,GAAN,yFACJa,EAAAA,GAAAA,IAAA,6CACiBb,EADjB,6DADI,uBACnBc,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAObI,EAAU,mCAAG,WAAMlB,GAAN,yFACDa,EAAAA,GAAAA,IAAA,6CACiBb,EADjB,qEADC,uBAChBc,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,qD","sources":["components/ReviewsItem/ReviewsItem.styled.js","components/ReviewsItem/ReviewsItem.jsx","Pages/Reviews.jsx","components/Api/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: auto;\n  padding: 15px;\n  width: 320px;\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 1200px;\n  }\n`;\n\nexport const Author = styled.p`\n  color: #ffffffc4;\n  text-align: center;\n`;\n\nexport const Review = styled.p`\n  color: #ffffffc4;\n  text-indent: 10px;\n  text-align: justify;\n`;\n","import { List, Author, Review } from './ReviewsItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const ReviewsItem = ({ reviews }) => {\n  return (\n    <List>\n      {reviews.length === 0 && <p>We don't have any reviews for this movie</p>}\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n          <Author>\n            Author: <strong>{author}</strong>\n          </Author>\n          <Review>{content}</Review>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nReviewsItem.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.any,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.any,\n    })\n  ),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviewsApi } from 'components/Api/Api';\nimport { ReviewsItem } from 'components/ReviewsItem/ReviewsItem';\n\nconst Reviews = () => {\n  const { moviesId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  const onArrayItems = async () => {\n    const movieReview = await getReviewsApi(moviesId);\n    setReviews(movieReview.results);\n  };\n\n  useEffect(() => {\n    onArrayItems();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <ReviewsItem reviews={reviews} />\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nexport const getTrandingsApi = async () => {\n  const { data } = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/week?api_key=6f552eb6929f0128999ddb3bd491ac60'\n  );\n  return data.results;\n};\n\nexport const getSearchMoviesApi = async name => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=6f552eb6929f0128999ddb3bd491ac60&language=en-US&query=${name}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const getReviewsApi = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=6f552eb6929f0128999ddb3bd491ac60&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getDetailsApi = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=6f552eb6929f0128999ddb3bd491ac60&language=en-US`\n  );\n  return data;\n};\n\nexport const getCastApi = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=6f552eb6929f0128999ddb3bd491ac60&language=en-US`\n  );\n  return data;\n};\n"],"names":["List","styled","Author","Review","ReviewsItem","reviews","length","map","id","author","content","moviesId","useParams","useState","setReviews","onArrayItems","getReviewsApi","movieReview","results","useEffect","getTrandingsApi","axios","data","getSearchMoviesApi","name","getDetailsApi","getCastApi"],"sourceRoot":""}